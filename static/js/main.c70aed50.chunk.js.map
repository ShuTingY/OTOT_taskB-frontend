{"version":3,"sources":["components/header.js","components/about.js","components/TodoItem.js","components/Todo.js","components/AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","About","Fragment","className","TodoItem","this","props","todo","id","title","description","isCompleted","createdAt","Segment","Grid","columns","Row","Column","width","Checkbox","onChange","markComplete","bind","checked","Item","Group","Content","content","Meta","Date","toLocaleDateString","Divider","Description","Button","icon","attached","floated","inverted","onClick","delTodo","Component","Todos","marginTop","todos","map","AddTodo","state","onSubmit","e","preventDefault","addTodo","setState","target","name","value","Form","Field","required","label","control","Input","placeholder","TextArea","disabled","App","axios","put","filter","delete","then","res","post","data","get","console","log","basename","process","exact","path","render","Container","Todo","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c70aed50.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nfunction Header() {\n    return (\n        <header style ={headerStyle}>\n            <h1>TodoList</h1>\n            <Link style= {linkStyle} to='/'>Home</Link> | <Link style={linkStyle} to='/about'>About</Link>\n        </header>\n    )\n}\n\nconst headerStyle = {\n    background:'#002080',\n    color: '#fff',\n    textAlign:'center',\n    padding: '10px'\n}\n\nconst linkStyle = {\n    color:'#fff',\n    textDecoration:'none'\n}\nexport default Header\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <React.Fragment>\n        <div className='container'>\n            <h1>About</h1>\n            <p>This is the TodoList app for CS3219 OTOT Task B</p>\n        </div>\n        </React.Fragment>\n    )\n}","import React, { Component } from 'react';\nimport { Segment, Button, Item, Checkbox, Grid, Divider } from 'semantic-ui-react'\nimport PropTypes from 'prop-types';\n\n//rec TAB\nexport class TodoItem extends Component {\n    render() {\n        const {id, title, description, isCompleted, createdAt} = this.props.todo;\n        return (\n            <Segment color={isCompleted? 'green' :'yellow'}>\n                \n                <Grid columns={3}>\n                  <Grid.Row>\n                    <Grid.Column width={1}>\n                      <Checkbox\n                      onChange={this.props.markComplete.bind(this, id)}\n                      checked={isCompleted}\n                      />\n                    </Grid.Column>\n                    <Grid.Column width={12}>\n                    <Item.Group>\n                    <Item>\n                \n                    <Item.Content>\n                      <Item.Header \n                      style={{textDecoration: isCompleted ?'line-through' : 'none'}}\n                      content={title}/>\n                    \n                      <Item.Meta style={{textDecoration: isCompleted ?'line-through' : 'none'}}\n                      >Create at {new Date(createdAt).toLocaleDateString()}</Item.Meta>\n                      {description \n                      ?\n                        <React.Fragment>\n                       <Divider/>\n                      <Item.Description style={{textDecoration: isCompleted ?'line-through' : 'none'}}> \n\n                      <h5>Additional details: </h5> <pre> {description} </pre> </Item.Description>\n                      </React.Fragment>\n                      : null\n                      } \n                      </Item.Content>\n                      </Item>\n                    </Item.Group>\n                    </Grid.Column>\n                    <Grid.Column width={3}>\n                      <Button.Group icon attached='right'  floated='right'>\n                       <Button inverted color='red' \n                                  icon='delete' \n                                  attached='right'\n                                  onClick={this.props.delTodo.bind(this,id)}\n                                  /> \n                      </Button.Group>\n                    </Grid.Column>\n                  </Grid.Row>\n                  </Grid>\n\n            </Segment>\n        )\n    }\n}\n\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    markComplete: PropTypes.func.isRequired,\n    delTodo: PropTypes.func.isRequired\n};\n\nexport default TodoItem\n","import React, { Component } from 'react';\nimport { Segment} from 'semantic-ui-react'\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n    render() {\n        return (\n        <Segment.Group style={{marginTop:\"1em\"}} >\n          {this.props.todos.map((todo) => (\n              <TodoItem key={todo.id} todo={todo} \n              markComplete={this.props.markComplete} \n                  delTodo = {this.props.delTodo}\n              />\n          ))}\n        </Segment.Group>\n        )\n    }\n}\nTodos.propTypes = {\n    todos: PropTypes.array.isRequired,\n    markComplete: PropTypes.func.isRequired,\n    delTodo: PropTypes.func.isRequired\n};\n\nexport default Todos;","import React, { Component } from 'react'\nimport {Segment, Form, Input, TextArea } from 'semantic-ui-react'\nimport PropTypes from 'prop-types'\nexport class AddTodo extends Component {\n    state = {\n        title: '',\n        description: ''\n    }\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.addTodo(this.state.title, this.state.description);\n        this.setState({title: '', description: ''});\n    }\n\n    onChange = (e) => this.setState(\n        {[e.target.name]: e.target.value}\n    );\n\n   \n    render() {\n      const {title, description} = this.state;\n        return (\n          <Segment>\n            <Form onSubmit={this.onSubmit}>\n              <Form.Field required\n                label=\"Todo title\"\n                id='todo-title'\n                control={Input}\n                name='title'\n                value={title}\n                placeholder='Add new todo...'\n                onChange={this.onChange}\n                />\n                <Form.Field\n                  id='from-textarea-control-description'\n                  control={TextArea}\n                  name='description'\n                  value={description}\n                  placeholder='Additional details...(optional)'\n                  onChange={this.onChange}\n                />\n                <Form.Button icon='add' inverted color='green' disabled={!title}/>\n            </Form>\n          </Segment>\n        )\n    }\n}\n\nAddTodo.propTypes = {\n    addTodo: PropTypes.func.isRequired\n};\n\nexport default AddTodo\n","import React, { Component } from 'react';\nimport{ BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\nimport Header from './components/header';\nimport About from './components/about';\nimport Todos from './components/Todo';\nimport AddTodo from './components/AddTodo';\nimport axios from 'axios'\nclass App extends Component {\n  state = {\n    todos: []\n  };\n  componentDidMount() {\n    axios.get('/resfulApi')\n    .then(res => {\n      console.log(res.data);\n    })\n    axios.get('/resfulApi/todo')\n    .then(res => {\n      console.log(res.data.data);\n      this.setState({todos:res.data.data})\n    })\n  }\n\n  // Toggle Complete\n  markComplete= (id) => {\n    this.setState({ todos:this.state.todos.map(todo => {\n      if(todo.id === id) {\n        todo.isCompleted = !todo.isCompleted;\n      }\n      axios.put(`/resfulApi/todo/${id}`, {\n        isCompleted:todo.isCompleted \n      })\n      return todo;\n    }) })\n  }\n  delTodo = (id) => {\n\n    this.setState({ todos: [...this.state.todos.filter(todo=> todo.id !== id)]})\n    axios.delete(`/resfulApi/todo/${id}`)\n    .then(res => this.setState({ todos: [...this.state.todos.filter(todo=> todo.id !== id)]}))\n  }\n\n  addTodo = (title, description) => {\n    if (!description ) {\n      axios.post('/resfulApi/todo', {\n        title\n      })\n      .then(res => this.setState({ todos: [...this.state.todos, res.data.data]}))\n    } else {\n      axios.post('/resfulApi/todo', {\n        title,\n        description\n      })\n      .then(res => this.setState({ todos: [...this.state.todos, res.data.data]}))\n\n    }\n    \n\n  }\n\n  render() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n    <div className=\"App\">\n    <div className = 'container'>\n    <Header/>\n    <Route exact path=\"/\" render={props => (\n      <React.Fragment>\n        <Container \n         style={{ padding: '2em 5em', width:'50%' }}>\n\n          <h1>Add todo</h1>\n          <AddTodo addTodo = {this.addTodo} />\n          <h1>Todo list:</h1>\n          <Todos todos={this.state.todos}  \n          markComplete = {this.markComplete}\n            delTodo = {this.delTodo}\n          />\n        </Container>\n      </React.Fragment>\n    )} />\n\n    <Route path = '/about' component={About}/>\n    \n    </div>\n    </div>\n    </Router>\n  );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}